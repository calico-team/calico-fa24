#include <iostream>
#include <vector>
#include <queue>
#include <unordered_set>
#include <unordered_map>

using namespace std;

int scan(int);
string submit(int);

int N = 500;
int D = 3;

// This function is a translation of the Python solution generated by ChatGPT
void solve() {
    vector<unordered_set<int>> adj_cache(N + 1);
    
    auto cache_scan = [&](int v) -> unordered_set<int>& {
        while (adj_cache[v].size() < D) {
            int w = scan(v);
            adj_cache[v].insert(w);
            adj_cache[w].insert(v);
        }
        return adj_cache[v];
    };

    queue<int> q;
    unordered_map<int, int> dist;
    
    q.push(1);
    dist[1] = 0;

    while (!q.empty()) {
        int curr_vertex = q.front();
        q.pop();

        for (int adj : cache_scan(curr_vertex)) {
            if (adj == N) {
                submit(dist[curr_vertex] + 1);
                return;
            }
            if (dist.find(adj) == dist.end()) {
                dist[adj] = dist[curr_vertex] + 1;
                q.push(adj);
            }
        }
    }
}

int scan(int v) {
    cout << "SCAN " << v << endl;
    string response;
    cin >> response;
    if (response == "WRONG_ANSWER") {
        exit(0);
    }
    return stoi(response);
}

string submit(int d) {
    cout << "SUBMIT " << d << endl;
    string response;
    cin >> response;
    if (response == "WRONG_ANSWER") {
        exit(0);
    }
    return response;
}

int main() {
    int T;
    cin >> T;
    for (int i = 0; i < T; ++i) {
        solve();
    }
    return 0;
}
